name: Plane App Test

on:
  workflow_dispatch:

jobs:
  plane:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Restore Playwright browser cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Make setup.sh executable
        run: chmod +x setup.sh
        
      - name: Cache Plane installation
        uses: actions/cache@v3
        with:
          path: plane-app
          key: ${{ runner.os }}-plane-${{ hashFiles('setup.sh') }}
          restore-keys: |
            ${{ runner.os }}-plane-

      - name: Install Plane
        run: ./setup.sh install

      - name: Start Plane
        run: ./setup.sh start
      
      - name: Check if action was 'start'
        id: checkStart
        run: echo "ran=${{ github.event.inputs.action == 'start' }}" >> $GITHUB_OUTPUT

      - name: Wait for Plane API to start
        run: |
          echo "Waiting for Plane API to become available..."
          for i in {1..30}; do
            if curl -s http://localhost/ > /dev/null; then
              echo "Plane API is up ✅"
              exit 0
            fi
            echo "Waiting ($i/30)..."
            sleep 5
          done
          echo "❌ Plane API did not start in time"
          exit 1
          
      - name: Smoke test
        run: |
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost/)
          if [ "$STATUS" -eq 200 ]; then
            echo "✅ Plane API responded OK"
          else
            echo "❌ API returned $STATUS"
            exit 1
          fi
  
  playwright:
      name: Playwright Tests
      runs-on: ubuntu-latest
      needs: plane
  
      steps:
        - name: Checkout repo
          uses: actions/checkout@v3
  
        - name: Setup Node.js
          uses: actions/setup-node@v4
          with:
            node-version: lts/*
  
        - name: Install dependencies
          run: npm ci
  
        - name: Install Playwright Browsers
          run: npx playwright install --with-deps

        - name: Load .env to GitHub ENV
          run: |
            if [ -f .env ]; then
              echo "Loading .env values..."
              cat .env >> $GITHUB_ENV
            fi
  
        - name: Run Playwright tests
          env:
          # These override or supplement .env file values
            BASE_URL: http://localhost
          run: npx playwright test --grep '\@pipeline-test'
  
        # Optional: Upload test report
        # - name: Upload HTML Report
        #   uses: actions/upload-artifact@v4
        #   with:
        #     name: playwright-report
        #     path: playwright-report/
